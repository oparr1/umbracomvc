@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Umbraco.Web
@using MvcUmbraco.Models
@using MvcUmbraco.Controllers.SurfaceControllers
@model ResetPasswordViewModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}
<div class="onepcssgrid-1200">
    <div class="onerow">
        <div class="col9">
            <section id="sectionPadding">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        @foreach (ModelState modelState in ViewData.ModelState.Values)
                        {
                            var errors = modelState.Errors;

                            if (errors.Any())
                            {
                                <ul>
                                    @foreach (ModelError error in errors)
                                    {
                                        <li><div class="submitfailed"><h2>@Html.Raw(@error.ErrorMessage)</h2></div></li>
                                    }
                                </ul>
                            }
                        }
                    </div>
                }
                @if (Convert.ToBoolean(TempData["IsSuccessful"]))
                {
                    <div class="alert alert-success">
                        <h3>Password reset successful!</h3>
                        <p>We have successfully reset your password, and you can now <a href="~/login">login</a></p>
                    </div>
                }
                else
                {
                    using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleResetPassword"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <h3>Reset your password</h3>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailAddress, "Email address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(model => model.EmailAddress, string.Empty, new { @class = "help-block" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, "Password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(model => model.Password, string.Empty, new { @class = "help-block" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, "Confirm password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, string.Empty, new { @class = "help-block" })
                            </div>
                            <button type="submit" class="btn btn-default">Reset Password</button>
                    }
                }
            </section>
        </div>
    </div>
</div>
